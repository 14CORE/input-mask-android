apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'kotlin'
apply plugin: 'java'

// This is the library version used when deploying the artifact
version = "1.1"

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}


def siteUrl = 'https://github.com/RedMadRobot/input-mask-android'      // Homepage URL of the library
def gitUrl = 'https://github.com/RedMadRobot/input-mask-android.git'   // Git repository URL
group = "com.redmadrobot"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'InputMask'
                description 'Android library that helps masking and formatting user input'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'MIT License'
                        url 'http://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id 'taflanidi'
                        name 'Egor Taflanidi'
                        email 'et@redmadrobot.com'
                    }
                    developer {
                        id 'xanderblinov'
                        name 'Alexander Blinov'
                        email 'a.blinov@redmadrobot.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compileOnly deps.kotlinStdlib
    compileOnly 'com.google.android:android:1.5_r3'

    testCompile testDeps.jUnit
}
// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    def systemEnvUser = System.getenv("bintray.user")
    def systemEnvKey = System.getenv("bintray.apikey")
    def systemEnvGpgPassphrase = System.getenv("bintray.gpg")

    user = systemEnvUser == null ? properties.getProperty("bintray.user") : systemEnvUser
    key = systemEnvKey == null ? properties.getProperty("bintray.apikey") : systemEnvKey
    def gpgPassphrase = systemEnvGpgPassphrase == null ? properties.getProperty("bintray.gpg") : systemEnvGpgPassphrase

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "inputmask"
        desc = 'Android library that handles asynchronous tasks in a proper way'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["MIT"]
        publish = true
        version {
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = gpgPassphrase //Optional. The passphrase for GPG signing'
            }
        }
    }
}